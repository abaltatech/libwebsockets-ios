name: Build and release a new version

on:
  push:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: actions-setup-cmake
        uses: jwlawson/actions-setup-cmake@v1.13.1
        with:
          cmake-version: 3.26


      - name: Checkout ios-cmake
        uses: actions/checkout@v3
        with:
          repository: leetal/ios-cmake
      
      - name: Checkout libwebsockets
        uses: actions/checkout@v3
        with:
          repository: warmcat/libwebsockets
          fetch-depth: 0

      - name: test
        run: |
          ls -al 
          ls -al ../
          ls -al ../../

      - name: Build
        shell: bash
        run: |
          git reset --hard 9f9dba9f209403c1e1ccf717b1252dd0e2bd799c

          #Remove -Werror from cmake to prevent wornnings on compile time 
          sed -i '' 's/-Werror //' CMakeLists.txt

          ########### create arm64 framework

          mkdir -p build-arm64/libwebsockets

          cd build-arm64

          cmake .. \
              -DCMAKE_TOOLCHAIN_FILE=../../ios-cmake/ios.toolchain.cmake \
              -DCMAKE_BUILD_TYPE="Release" \
              -DPLATFORM=OS64 \
              -DLWS_WITH_SSL=OFF \
              -DENABLE_BITCODE=1 \
              -DLWS_HAVE_LIBCAP=0 \
              -DLWS_WITHOUT_TESTAPPS=ON -DLWS_WITH_SHARED=OFF \
              -DCMAKE_INSTALL_PREFIX=./libwebsockets

          make -j 12
          make install

          cd libwebsockets

          mkdir -p libwebsockets.framework/Headers

          cp -r include/*.h libwebsockets.framework/Headers
          cp -r include/libwebsockets/* libwebsockets.framework/Headers
          cp lib/libwebsockets.a libwebsockets.framework/libwebsockets

          cd ../..

          ###########  Create simulator x86-64 framework

          mkdir -p build-x86-64-sim/libwebsockets

          cd build-x86-64-sim

          cmake .. \
              -DCMAKE_TOOLCHAIN_FILE=../../ios-cmake/ios.toolchain.cmake \
              -DCMAKE_BUILD_TYPE="Release" \
              -DPLATFORM=SIMULATOR64 \
              -DLWS_WITH_SSL=OFF \
              -DENABLE_BITCODE=1 \
              -DLWS_HAVE_LIBCAP=0 \
              -DLWS_WITHOUT_TESTAPPS=ON -DLWS_WITH_SHARED=OFF \
              -DCMAKE_INSTALL_PREFIX=./libwebsockets

          make -j 12
          make install

          cd libwebsockets

          mkdir -p libwebsockets.framework/Headers

          cp -r include/*.h libwebsockets.framework/Headers
          cp -r include/libwebsockets/* libwebsockets.framework/Headers
          cp lib/libwebsockets.a libwebsockets.framework/libwebsockets

          cd ../..

          ###########  Create simulator arm64 framework

          mkdir -p build-arm64-sim/libwebsockets

          cd build-arm64-sim

          cmake .. \
              -DCMAKE_TOOLCHAIN_FILE=../../ios-cmake/ios.toolchain.cmake \
              -DCMAKE_BUILD_TYPE="Release" \
              -DPLATFORM=SIMULATORARM64 \
              -DLWS_WITH_SSL=OFF \
              -DENABLE_BITCODE=1 \
              -DLWS_HAVE_LIBCAP=0 \
              -DLWS_WITHOUT_TESTAPPS=ON -DLWS_WITH_SHARED=OFF \
              -DCMAKE_INSTALL_PREFIX=./libwebsockets

          make -j 12
          make install

          cd libwebsockets

          mkdir -p libwebsockets.framework/Headers

          cp -r include/*.h libwebsockets.framework/Headers
          cp -r include/libwebsockets/* libwebsockets.framework/Headers
          cp lib/libwebsockets.a libwebsockets.framework/libwebsockets

          cd ../..

          ########### Create arm64_x86_64-simulator (union two simulators library)

          mkdir -p arm64_x86_64-simulator
          cd arm64_x86_64-simulator

          mkdir -p libwebsockets
          cd libwebsockets

          mkdir -p libwebsockets.framework/Headers
          cp -r ../../build-arm64-sim/libwebsockets/libwebsockets.framework/Headers libwebsockets.framework


          lipo -create ../../build-arm64-sim/libwebsockets/lib/libwebsockets.a ../../build-x86-64-sim/libwebsockets/lib/libwebsockets.a -output ./libwebsockets.framework/libwebsockets

          cd ../..
    
          ########### Create xcframework
          mkdir -p build

          cd build

          rm -rf libwebsockets.xcframework

          xcodebuild -create-xcframework \
          -framework ../build-arm64/libwebsockets/libwebsockets.framework \
          -framework ../arm64_x86_64-simulator/libwebsockets/libwebsockets.framework \
          -output libwebsockets.xcframework

          cd ..
    
      - name: Zip artifact
        #working-directory: libwebsockets
        run: zip -r libwebsockets.xcframework.zip build/libwebsockets.xcframework

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: libwebsockets.xcframework
          path: libwebsockets/libwebsockets.xcframework
          if-no-files-found: error
          
  #release:
  #  needs: build
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Checkout
  #      uses: actions/checkout@v3
        
  #    - name: Download artifact
  #      uses: actions/download-artifact@v3
  #      with:
  #        name: libwebsockets.xcframework.zip
          
  #    - name: Release
  #      uses: softprops/action-gh-release@v1
  #      with:
  #       files: libwebsockets.xcframework.zip
  #       tag_name: 1.00