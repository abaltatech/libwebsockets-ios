name: Build and release a new version

on:
  push:
    branches: [ "main" ]
    paths: [ ".version" ] 

  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: actions-setup-cmake
        uses: jwlawson/actions-setup-cmake@v1.14.1
        with:
          cmake-version: 3.26.4

      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: libwebsockets-abalta


      - name: Checkout ios-cmake
        uses: actions/checkout@v3
        with:
          repository: leetal/ios-cmake
          path: ios-cmake

      - name: Get version
        id: get_version
        working-directory: libwebsockets-abalta
        run: echo "VERSION=$(cat .version)" >> $GITHUB_OUTPUT

      
      - name: Checkout libwebsockets
        uses: actions/checkout@v3
        with:
          repository: warmcat/libwebsockets
          #fetch-depth: 0
          ref: refs/tags/${{ steps.get_version.outputs.VERSION }}
          path: libwebsockets

      - name: Build
        shell: bash
        working-directory: libwebsockets
        run: |
  
          #Remove -Werror from cmake to prevent errors on compile time 
          sed -i '' 's/-Werror //' CMakeLists.txt

          ########### create arm64 framework

          mkdir -p build-arm64/libwebsockets

          cd build-arm64

          cmake .. \
              -DCMAKE_TOOLCHAIN_FILE=../../ios-cmake/ios.toolchain.cmake \
              -DCMAKE_BUILD_TYPE="Release" \
              -DPLATFORM=OS64 \
              -DLWS_WITH_SSL=OFF \
              -DENABLE_BITCODE=1 \
              -DLWS_HAVE_LIBCAP=0 \
              -DLWS_WITHOUT_TESTAPPS=ON -DLWS_WITH_SHARED=OFF \
              -DCMAKE_INSTALL_PREFIX=./libwebsockets

          make -j 12
          make install

          cd libwebsockets

          mkdir -p libwebsockets.framework/Headers

          cp -r include/*.h libwebsockets.framework/Headers
          cp -r include/libwebsockets/* libwebsockets.framework/Headers
          cp lib/libwebsockets.a libwebsockets.framework/libwebsockets

          cd ../..

          ###########  Create simulator x86-64 framework

          mkdir -p build-x86-64-sim/libwebsockets

          cd build-x86-64-sim

          cmake .. \
              -DCMAKE_TOOLCHAIN_FILE=../../ios-cmake/ios.toolchain.cmake \
              -DCMAKE_BUILD_TYPE="Release" \
              -DPLATFORM=SIMULATOR64 \
              -DLWS_WITH_SSL=OFF \
              -DENABLE_BITCODE=1 \
              -DLWS_HAVE_LIBCAP=0 \
              -DLWS_WITHOUT_TESTAPPS=ON -DLWS_WITH_SHARED=OFF \
              -DCMAKE_INSTALL_PREFIX=./libwebsockets

          make -j 12
          make install

          cd libwebsockets

          mkdir -p libwebsockets.framework/Headers

          cp -r include/*.h libwebsockets.framework/Headers
          cp -r include/libwebsockets/* libwebsockets.framework/Headers
          cp lib/libwebsockets.a libwebsockets.framework/libwebsockets

          cd ../..

          ###########  Create simulator arm64 framework

          mkdir -p build-arm64-sim/libwebsockets

          cd build-arm64-sim

          cmake .. \
              -DCMAKE_TOOLCHAIN_FILE=../../ios-cmake/ios.toolchain.cmake \
              -DCMAKE_BUILD_TYPE="Release" \
              -DPLATFORM=SIMULATORARM64 \
              -DLWS_WITH_SSL=OFF \
              -DENABLE_BITCODE=1 \
              -DLWS_HAVE_LIBCAP=0 \
              -DLWS_WITHOUT_TESTAPPS=ON -DLWS_WITH_SHARED=OFF \
              -DCMAKE_INSTALL_PREFIX=./libwebsockets

          make -j 12
          make install

          cd libwebsockets

          mkdir -p libwebsockets.framework/Headers

          cp -r include/*.h libwebsockets.framework/Headers
          cp -r include/libwebsockets/* libwebsockets.framework/Headers
          cp lib/libwebsockets.a libwebsockets.framework/libwebsockets

          cd ../..

          ########### Create arm64_x86_64-simulator (union two simulators library)

          mkdir -p arm64_x86_64-simulator
          cd arm64_x86_64-simulator

          mkdir -p libwebsockets
          cd libwebsockets

          mkdir -p libwebsockets.framework/Headers
          cp -r ../../build-arm64-sim/libwebsockets/libwebsockets.framework/Headers libwebsockets.framework

          lipo -create ../../build-arm64-sim/libwebsockets/lib/libwebsockets.a ../../build-x86-64-sim/libwebsockets/lib/libwebsockets.a -output ./libwebsockets.framework/libwebsockets

          cd ../..
    
          ########### Create xcframework
          mkdir -p build

          cd build

          rm -rf libwebsockets.xcframework

          xcodebuild -create-xcframework \
          -framework ../build-arm64/libwebsockets/libwebsockets.framework \
          -framework ../arm64_x86_64-simulator/libwebsockets/libwebsockets.framework \
          -output libwebsockets.xcframework


          #Fixed warnings 

          sed -i '' 's/#include "lws_config.h"/#include <libwebsockets\/lws_config.h>/' libwebsockets.xcframework/ios-arm64/libwebsockets.framework/Headers/libwebsockets.h
          sed -i '' 's/#include "lws_config.h"/#include <libwebsockets\/lws_config.h>/' libwebsockets.xcframework/ios-arm64_x86_64-simulator/libwebsockets.framework/Headers/libwebsockets.h


      - name: Zip artifact
        working-directory: libwebsockets
        run: zip -r libwebsockets.xcframework.zip build/libwebsockets.xcframework

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: libwebsockets.xcframework.zip
          path: libwebsockets/libwebsockets.xcframework.zip
          if-no-files-found: error
          
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: libwebsockets.xcframework.zip

      - name: Get version
        id: get_version
        run: echo "VERSION=$(cat .version)" >> $GITHUB_OUTPUT
              
      - name: Update Package.swift
        run: |
          sed -i "s/let version = \".*\"/let version = \"${{ steps.get_version.outputs.VERSION }}\"/" Package.swift
          sed -i "s/let checksum = \".*\"/let checksum = \"$(shasum -a 256 libwebsockets.xcframework.zip | cut -d ' ' -f 1)\"/" Package.swift
  
      - name: Commit and push
        run: |
          git config --local user.email "abalta-github-build@abaltatech.com"
          git config --local user.name "abalta-github-build"
          git add Package.swift
          git commit -m "Update Package.swift"
          current_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
          if [[ "$current_tag" == ${{ steps.get_version.outputs.VERSION }} ]]; then
             git tag -d "$current_tag"
             git push --delete origin "$current_tag"
          else
             git push
          fi
          
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
         files: libwebsockets.xcframework.zip
         tag_name: ${{ steps.get_version.outputs.VERSION }}